#include "pieces.h"

namespace bblocks::piece
{
    namespace
    {
        // NOTE: layout is pieces_[kind][rotation][horizontal blocks][vertical blocks]
        char pieces_ [7][4][5][5]
        {
            // Square
            {
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 1, 1, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 1, 1, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 1, 1, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 1, 1, 0},
                 {0, 0, 0, 0, 0}}
            },
            // I
            {
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 1, 2, 1, 1},
                 {0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 2, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 1, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {1, 1, 2, 1, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 1, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 2, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}}
            },
            // L
            {
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 2, 0, 0},
                 {0, 0, 1, 1, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 1, 2, 1, 0},
                 {0, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 1, 1, 0, 0},
                 {0, 0, 2, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 1, 0},
                 {0, 1, 2, 1, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0}}
            },
            // L mirrored
            {
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 2, 0, 0},
                 {0, 1, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 1, 0, 0, 0},
                 {0, 1, 2, 1, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 1, 0},
                 {0, 0, 2, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 1, 2, 1, 0},
                 {0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 0}}
            },
            // N
            {
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 1, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 1, 2, 0, 0},
                 {0, 0, 1, 1, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 1, 2, 0, 0},
                 {0, 1, 0, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 1, 1, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0}}
            },
            // N mirrored
            {
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 0, 1, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 1, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 1, 0, 0, 0},
                 {0, 1, 2, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 1, 0},
                 {0, 1, 2, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0}}
            },
            // T
            {
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 2, 1, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0},
                 {0, 1, 2, 1, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 1, 2, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 0, 0, 0, 0}},
                {{0, 0, 0, 0, 0},
                 {0, 0, 1, 0, 0},
                 {0, 1, 2, 1, 0},
                 {0, 0, 0, 0, 0},
                 {0, 0, 0, 0, 0}}
            }
        };

        // NOTE: layout is pieces_initial_position_[kind][rotation][position]
        s32 pieces_initial_position_[7][4][2]
        {
            // Square
            {{-2, -3},
             {-2, -3},
             {-2, -3},
             {-2, -3}},
            // I
            {{-2, -2},
             {-2, -3},
             {-2, -2},
             {-2, -3}},
            // L
            {{-2, -3},
             {-2, -3},
             {-2, -3},
             {-2, -2}},
            // L mirrored
            {{-2, -3},
             {-2, -2},
             {-2, -3},
             {-2, -3}},
            // N
            {{-2, -3},
             {-2, -3},
             {-2, -3},
             {-2, -2}},
            // N mirrored
            {{-2, -3},
             {-2, -3},
             {-2, -3},
             {-2, -2}},
            // T
            {{-2, -3},
             {-2, -3},
             {-2, -3},
             {-2, -2}},
        };
    } // anonymous namespace    

    u32
    get_block_type (const u32 piece, const u32 rotation, const s32 x, const s32 y)
    { 
        return pieces_[piece][rotation][x][y];
    }

    s32
    get_x_initial_position (const u32 piece, const u32 rotation)
    { 
        return pieces_initial_position_[piece][rotation][0]; 
    }

    s32
    get_y_initial_position (const u32 piece, const u32 rotation)
    { 
        return pieces_initial_position_[piece][rotation][1];
    }
}